package com.devtiro.jdbctemplate;

import static org.assertj.core.api.Assertions.assertThat;

import java.util.Optional;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.junit.jupiter.SpringExtension;

import com.devtiro.jdbctemplate.dao.AuthorDao;
import com.devtiro.jdbctemplate.dao.impl.BookDaoImpl;
import com.devtiro.jdbctemplate.domain.Author;
import com.devtiro.jdbctemplate.domain.Book;

@SpringBootTest
@ExtendWith(SpringExtension.class)
@DirtiesContext(classMode = DirtiesContext.ClassMode.AFTER_EACH_TEST_METHOD)
public class BookDaoImplIntegrationTest {
	
	private AuthorDao authorDao;
	private BookDaoImpl underTest;
	
	@Autowired
	public BookDaoImplIntegrationTest(BookDaoImpl bookDaoimpl, AuthorDao authorDao ) {
		this.underTest = bookDaoimpl;
		this.authorDao = authorDao;
	}
	
	@Test
	public void testthatBookCanBeCreatedAndRecaled() {
		
		Author author = TestDataUtil.createTestAuthor();
		authorDao.create(author);
		Book book = TestDataUtil.createTestBook();
		underTest.create(book);
		book.setAuthor_id(author.getId());
		Optional<Book> result = underTest.find(book.getIsbn());
		assertThat(result).isPresent();
		assertThat(result.get()).isEqualTo(book);
		
	}
	
	@Test
	public void testThatMultipleBooksCanBeCreatedAndRecalled() {
		
		Author author = TestDataUtil.createTestAuthor();
		authorDao.create(author);
		
		
	}
	
	

}
